<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012-2013 "Monowai Developments Limited"
  ~
  ~ This file is part of AuditBucket.
  ~
  ~ AuditBucket is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ AuditBucket is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with AuditBucket.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>auditbucket</artifactId>
        <groupId>com.monowai</groupId>
        <version>0.90-BUILD-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>ab-engine</artifactId>

    <properties>
        <!--You need to keep the SDN lib in line with the Neo4J version otherwise
        odd errors involving REAL_TIME occur during startup-->

        <org.springdata.neo4j>3.0.0.M1</org.springdata.neo4j>
        <neo4j.version>2.0.0</neo4j.version>

        <!--<org.springdata.neo4j>2.4.0.BUILD-SNAPSHOT</org.springdata.neo4j>-->
        <!--<org.springdata.neo4j>2.3.3.RELEASE</org.springdata.neo4j>-->
        <!--<neo4j.version>1.9.5</neo4j.version>-->
        <ehcache.version>2.6.7</ehcache.version>

        <!--Default properties for test. integration over http and Neo4J running embedded-->
        <ab.integration>http</ab.integration>
        <neo4j>java</neo4j>
    </properties>

    <dependencies>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework-version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${org.springsecurity-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-core</artifactId>
            <version>${org.springintegration.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-http</artifactId>
            <version>${org.springintegration.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-amqp</artifactId>
            <version>${org.springintegration.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-stream</artifactId>
            <version>${org.springintegration.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${org.springsecurity-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${org.springsecurity-version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>de.undercouch</groupId>
            <artifactId>bson4jackson</artifactId>
            <version>2.3.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Servlet -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <version>7.0.47</version>
            <scope>provided</scope>
        </dependency>

        <!--Needed for neo4j-aspects-->
        <!--<dependency>-->
        <!--<groupId>org.hibernate.javax.persistence</groupId>-->
        <!--<artifactId>hibernate-jpa-2.0-api</artifactId>-->
        <!--<version>1.0.1.Final</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.data</groupId>-->
        <!--<artifactId>spring-data-redis</artifactId>-->
        <!--<version>1.1.0.M1</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-neo4j</artifactId>
            <version>${org.springdata.neo4j}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-community</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-neo4j-rest</artifactId>
            <version>${org.springdata.neo4j}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-community</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Required for embedding the neo4j rest API-->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.17.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j.app</groupId>
            <artifactId>neo4j-server</artifactId>
            <version>${neo4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-access</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>javax.servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.neo4j.app</groupId>-->
        <!--<artifactId>neo4j-server</artifactId>-->
        <!--<version>${neo4j.version}</version>-->
        <!--<classifier>static-web</classifier>-->
        <!--&lt;!&ndash;<scope>test</scope>&ndash;&gt;-->
        <!--</dependency>-->
        <!--sd-Neo4J advanced mapping-->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-neo4j-aspects</artifactId>
            <version>${org.springdata.neo4j}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.kohsuke</groupId>-->
        <!--<artifactId>github-api</artifactId>-->
        <!--<version>1.38</version>-->
        <!--&lt;!&ndash;<scope>test</scope>&ndash;&gt;-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.monowai</groupId>
            <artifactId>ab-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>20030825.183949</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>1.1.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>redis.embedded</groupId>
            <artifactId>embedded-redis</artifactId>
            <version>0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.1.0</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <packagingExcludes>WEB-INF/classes/log4j.xml</packagingExcludes>
                    <packagingExcludes>WEB-INF/lib/servlet-api*.jar</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>

                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <junitArtifactName>junit:junit</junitArtifactName>
                    <argLine>-Xmx512m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>aspectj-maven-plugin</artifactId>-->
            <!--&lt;!&ndash; Have to use version 1.2 since version 1.3 does not appear to work with ITDs &ndash;&gt;-->
            <!--<version>1.4</version>-->

            <!--<dependencies>-->
            <!--&lt;!&ndash; You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) &ndash;&gt;-->
            <!--<dependency>-->
            <!--<groupId>org.aspectj</groupId>-->
            <!--<artifactId>aspectjrt</artifactId>-->
            <!--<version>${org.aspectj-version}</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--<groupId>org.aspectj</groupId>-->
            <!--<artifactId>aspectjtools</artifactId>-->
            <!--<version>${org.aspectj-version}</version>-->
            <!--</dependency>-->
            <!--</dependencies>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>compile</goal>-->
            <!--<goal>test-compile</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--<configuration>-->
            <!--<outxml>true</outxml>-->
            <!--<aspectLibraries>-->
            <!--&lt;!&ndash;<aspectLibrary>&ndash;&gt;-->
            <!--&lt;!&ndash;<groupId>org.springframework</groupId>&ndash;&gt;-->
            <!--&lt;!&ndash;<artifactId>spring-aspects</artifactId>&ndash;&gt;-->
            <!--&lt;!&ndash;</aspectLibrary>&ndash;&gt;-->
            <!--&lt;!&ndash;Throws a null pointer when enabled AspectJ config not yet complete?&ndash;&gt;-->
            <!--&lt;!&ndash;<aspectLibrary>&ndash;&gt;-->
            <!--&lt;!&ndash;<groupId>org.springframework.data</groupId>&ndash;&gt;-->
            <!--&lt;!&ndash;<artifactId>spring-data-neo4j-aspects</artifactId>&ndash;&gt;-->
            <!--&lt;!&ndash;</aspectLibrary>&ndash;&gt;-->
            <!--</aspectLibraries>-->
            <!--<source>${java-version}</source>-->
            <!--<target>${java-version}</target>-->
            <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>test-jar</goal>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--This plugin will deploy the jar in local repository-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <packaging>jar</packaging>
                            <artifactId>${project.artifactId}</artifactId>
                            <groupId>${project.groupId}</groupId>
                            <version>${project.version}</version>
                            <file>
                                ${project.build.directory}/${project.artifactId}-${project.version}.jar
                            </file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.0</version>
                <executions>
                    <execution>
                        <id>tomcat-run</id>
                        <goals>
                            <goal>exec-war-only</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <!-- optional only if you want to use a preconfigured server.xml file -->
                            <!--
                            <serverXml>src/main/tomcatconf/server.xml</serverXml>
                            -->
                            <warRunDependencies>
                                <warRunDependency>
                                    <dependency>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                        <type>war</type>
                                    </dependency>
                                    <contextPath>/${project.artifactId}</contextPath>

                                </warRunDependency>
                            </warRunDependencies>
                            <enableNaming>true</enableNaming>

                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <server>tomcat-development-server</server>
                    <port>8080</port>
                    <ajpPort>8087</ajpPort>
                    <path>/${project.artifactId}</path>
                    <warRunDependencies>
                        <warRunDependency>
                            <dependency>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <version>${project.version}</version>
                                <type>war</type>
                            </dependency>
                            <contextPath>/${project.artifactId}</contextPath>
                        </warRunDependency>
                    </warRunDependencies>
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>de.thetaphi</groupId>-->
            <!--<artifactId>forbiddenapis</artifactId>-->
            <!--<version>1.3</version>-->

            <!--<executions>-->
            <!--<execution>-->
            <!--<id>check-forbidden-apis</id>-->
            <!--<configuration>-->
            <!--<targetVersion>1.6</targetVersion>-->
            <!--&lt;!&ndash; disallow undocumented classes like sun.misc.Unsafe: &ndash;&gt;-->
            <!--<internalRuntimeForbidden>true</internalRuntimeForbidden>-->
            <!--&lt;!&ndash; if the used Java version is too new, don't fail, just do nothing: &ndash;&gt;-->
            <!--<failOnUnsupportedJava>false</failOnUnsupportedJava>-->
            <!--<excludes>-->
            <!--<exclude>jsr166e/**</exclude>-->
            <!--<exclude>jsr166y/**</exclude>-->
            <!--&lt;!&ndash; start excludes for valid system-out &ndash;&gt;-->
            <!--&lt;!&ndash;<exclude>org/elasticsearch/Version.class</exclude>&ndash;&gt;-->
            <!--&lt;!&ndash; end excludes for valid system-out &ndash;&gt;-->
            <!--</excludes>-->
            <!--<bundledSignatures>-->
            <!--&lt;!&ndash; This will automatically choose the right signatures based on 'maven.compiler.target': &ndash;&gt;-->
            <!--<bundledSignature>jdk-unsafe</bundledSignature>-->
            <!--<bundledSignature>jdk-deprecated</bundledSignature>-->
            <!--<bundledSignaure>jdk-system-out</bundledSignaure>-->
            <!--</bundledSignatures>-->
            <!--&lt;!&ndash;<signaturesFiles>&ndash;&gt;-->
            <!--&lt;!&ndash;<signaturesFile>core-signatures.txt</signaturesFile>&ndash;&gt;-->
            <!--&lt;!&ndash;</signaturesFiles>&ndash;&gt;-->
            <!--</configuration>-->
            <!--<phase>compile</phase>-->
            <!--<goals>-->
            <!--<goal>check</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>check-forbidden-test-apis</id>-->
            <!--<configuration>-->
            <!--<targetVersion>1.6</targetVersion>-->
            <!--&lt;!&ndash; disallow undocumented classes like sun.misc.Unsafe: &ndash;&gt;-->
            <!--<internalRuntimeForbidden>true</internalRuntimeForbidden>-->
            <!--&lt;!&ndash; if the used Java version is too new, don't fail, just do nothing: &ndash;&gt;-->
            <!--<failOnUnsupportedJava>false</failOnUnsupportedJava>-->
            <!--<bundledSignatures>-->
            <!--&lt;!&ndash; This will automatically choose the right signatures based on 'maven.compiler.target': &ndash;&gt;-->
            <!--<bundledSignature>jdk-unsafe</bundledSignature>-->
            <!--<bundledSignature>jdk-deprecated</bundledSignature>-->
            <!--</bundledSignatures>-->
            <!--</configuration>-->
            <!--<phase>test-compile</phase>-->
            <!--<goals>-->
            <!--<goal>testCheck</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

        </plugins>
    </build>

    <repositories>
        <repository>
            <id>neo4j-snapshots</id>
            <name>Neo4j Snapshots</name>
            <url>http://m2.neo4j.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
