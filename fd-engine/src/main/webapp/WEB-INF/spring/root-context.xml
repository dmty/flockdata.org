<?xml version=
        "1.0" encoding="UTF-8"?>
<!-- ~ Copyright (company) 2012-2014 "Monowai Developments Limited" ~ ~ This 
	file is part of AuditBucket. ~ ~ AuditBucket is free software: you can redistribute 
	it and/or modify ~ it under the terms of the GNU General Public License as 
	published by ~ the Free Software Foundation, either version 3 of the License, 
	or ~ (at your option) any later version. ~ ~ AuditBucket is distributed in 
	the hope that it will be useful, ~ but WITHOUT ANY WARRANTY; without even 
	the implied warranty of ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
	See the ~ GNU General Public License for more details. ~ ~ You should have 
	received a copy of the GNU General Public License ~ along with AuditBucket. 
	If not, see <http://www.gnu.org/licenses/>. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"

	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:spring-configured />
	<context:annotation-config />

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan
		base-package="org.flockdata.engine,org.flockdata.registration,org.flockdata.helper,org.flockdata.geography,org.flockdata.fortress" />

	<context:property-placeholder
		ignore-resource-not-found="true" ignore-unresolvable="true"
		location="classpath:/config.properties,file:${fd.config},file:${fd.auth.config}" />
		
	<!--ToDo: We'll have to add in a parameter to make this dynamic-->
    <import resource="classpath:${fd.auth.provider}-security.xml" />
	<import resource="integration.xml" />
	<import resource="http-proxy-integration.xml" />
	<import resource="http-monitoring-integration.xml" />
	<import resource="${fd.integration}-integration.xml" />
	<import resource="neo4j-context.xml" />
	<import resource="kv-context.xml" />

	<task:annotation-driven executor="fd-engineExec"  />

	<!--Pool size is the number of executors that will handle Bulk Uploads and 
		incoming search responses -->
	<task:executor id="fd-engineExec" pool-size="${thread.poolSize}"
		keep-alive="120" queue-capacity="${thread.queueCapacity}" rejection-policy="CALLER_RUNS" />

	<aop:aspectj-autoproxy />
	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="ehcache" />

	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache.xml" p:shared="true" />

    <bean id="corsFilter" class="org.flockdata.helper.CorsSpringFilter" >
        <constructor-arg >
            <bean class="com.thetransactioncompany.cors.CORSConfiguration" >
                <constructor-arg>
                    <!-- Init the CORS filter via Spring so that properties can be extracted from anywhere-->
                    <props>
                        <prop key="cors.allowOrigin">${cors.allowOrigin}</prop>
                        <prop key="cors.allowSubdomains">${cors.allowSubdomains}</prop>
                        <prop key="cors.supportedHeaders">${cors.supportedHeaders}</prop>
                        <prop key="cors.exposedHeaders">${cors.exposedHeaders}</prop>
                        <prop key="cors.supportedMethods">${cors.supportedMethods}</prop>
                        <prop key="cors.supportsCredentials">${cors.supportsCredentials}</prop>
                        <prop key="cors.maxAge">${cors.maxAge}</prop>
                        <prop key="cors.tagRequests">${cors.tagRequests}</prop>

                    </props>
                </constructor-arg>
            </bean>
        </constructor-arg>

    </bean>


</beans>
