<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/integration/amqp
	                    http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		                http://www.springframework.org/schema/integration
		                http://www.springframework.org/schema/integration/spring-integration.xsd">


    <int:annotation-config/>

    <!-- Implementation bindings -->
    <import resource="fde-amqp-rabbit.xml"/>

    <!-- Acknowledgement from fd-search of an fd-engine request-->
    <int-amqp:inbound-channel-adapter id="searchSyncResultId"
                              channel="searchDocSyncResult"
                              queue-names="${fd-engine.queue}"
                              shutdown-timeout="3000"
                              acknowledge-mode="AUTO"
                              concurrent-consumers="${fd-search.concurrentConsumers}"
                              prefetch-count="${fd-search.prefetchCount}"
                              task-executor="fd-search"
                              connection-factory="connectionFactory"
                              message-converter="jsonToSearchResultConverter"/>

    <!--internally used to send content to the inboundTrackGateway -->
    <!--<int-amqp:outbound-channel-adapter-->
            <!--channel="writeEntityContent"-->
            <!--lazy-connect="${amqp.lazyConnect}"-->
            <!--mapped-request-headers="apiKey"-->
            <!--routing-key="${fd-track.binding}"-->
            <!--exchange-name="${fd-track.exchange}"/>-->

    <!--<int-amqp:outbound-channel-adapter-->
            <!--channel="syncSearchDocs"-->
            <!--lazy-connect="${fd.amqp.lazyConnect}"-->
            <!--routing-key="${fd-search.binding}"-->
            <!--exchange-name="${fd-search.exchange}"/>-->

    <!--Writes entity to the KV store. Part of the track workflow. -->
    <!--<int-amqp:outbound-channel-adapter-->
            <!--channel="writeKvContent"-->
            <!--routing-key="${fd-store.binding}"-->
            <!--lazy-connect="${amqp.lazyConnect}"-->
            <!--exchange-name="${fd-store.exchange}"/>-->

    <!--Receives the inbound request from writeKvContent-->
    <int-amqp:inbound-channel-adapter id="kvWrite"
                              queue-names="${fd-store.queue}"
                              channel="doKvWrite"
                              connection-factory="connectionFactory"
                              shutdown-timeout="3000"
                              task-executor="fd-store"
                              mapped-request-headers="*"
                              error-channel="kvErrors"
                              acknowledge-mode="AUTO"
                              message-converter="jsonToKvContentConverter"
                              concurrent-consumers="${fd-store.concurrentConsumers}"
                              prefetch-count="${fd-store.prefetchCount}"
                              />

    <!-- Starts an incoming request to track an entity -->
    <!--ToDo: Track Result should be sent somewhere -->
    <int-amqp:inbound-gateway id="entityWrite"
                              request-channel="doTrackEntity"
                              reply-channel="trackResult"
                              queue-names="${fd-track.queue}"
                              connection-factory="connectionFactory"
                              shutdown-timeout="3000"
                              task-executor="fd-track"
                              mapped-request-headers="*"
                              mapped-reply-headers="*"
                              error-channel="entityErrors"
                              message-converter="jsonToEntityInput"
                              concurrent-consumers="${fd-track.concurrentConsumers}"
                              prefetch-count="${fd-track.prefetchCount}"
                              />
</beans>
