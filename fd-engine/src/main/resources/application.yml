### Default configuration properties for fd-engine

## You can override these settings by placing a application.properties
## in the flockdata classpath. This file, deployed with fd-engine and fd-search
## represents the default settings if no other configuration is in use

# Where fd-search
#fd.search.url: http://fd-search:8081

# Default value for new fortresses being created.
# If store in the fortress is false, then only current state data is stored
# i.e. no history
# You can update an existing fortress and set it's store property to false/true to
# disable/enable KV versions

server:
  port: 8080

eureka:
  client:
    serviceUrl:
      defaultZone: ${org.fd.discovery.url:http://127.0.0.1:8761/eureka/}
    enabled: 'false'
spring:
  application:
    name: fd-engine
  profiles:
    active: production
    include: fd-server,fd-auth-test
  cloud:
    config:
      discovery:
        enabled: false


application:
  title: FlockData GraphWriter



# Example Stormpath configuration
# You pass FD_HOME on your commandline

# Message queues - Balance against ack/nack rate throughput
# Threadpools
org.fd:
  engine:
    # Defaults on creation of a fortress if not otherwise supplied
    fortress:
      search: enabled
      store: disabled
    system:
      # Mount point for the api
      api: /api
      constraints: true
      concepts: true
      timings: false
      # The default store to write to IF a fortress allows it. See fd.engine.fortress.store & fd.store.system.enabled
      storage: RIAK
    messaging:
      queue: fd.engine.queue
      binding: fd.engine.binding
      exchange: fd.engine.exchange
      dlq.queue: fd.engine.dlq.queue
      dlq.exchange: fd.engine.dlq.exchange
      prefetchCount: 1
    executor:
      poolSize: 8-15
      queueCapacity: 3

  # Used for handling incoming data
  track:
    executor:
        poolSize: 8-15
        queueCapacity: 3
    messaging:
      exchange: fd.track.exchange
      binding: fd.track.binding
      queue: fd.track.queue
      response: fd.response.queue
      concurrentConsumers: 2
      queueCapacity: 10
      prefetchCount: 10
      dlq:
        queue: fd.track.dlq.queue
        exchange: fd.track.dlq.exchange

  search:
    api: ${org.fd.search.url:http://127.0.0.1:8081}
    index:
      #ElasticSarch indexes will start with this prefix
      prefix: fd.
    messaging:
      exchange: fd.search.exchange
      binding: fd.search.binding
      concurrentConsumers: 2
      prefetchCount: 10
      queue: fd.search.queue
      dlq:
        queue: fd.search.dlq.queue
        exchange: fd.search.dlq.exchange
    executor:
      poolSize: 20-30
      queueCapacity: 10
  store:
    api: ${org.fd.store.url:http://127.0.0.1:8082}
    system:
      enabled: false
    # Async hand offs to fd-store
    messaging:
      exchange: fd.store.exchange
      binding: fd.store.binding
      queue: fd.store.queue
      concurrentConsumers: 2
      prefetchCount: 1
      dlq:
        queue: fd.store.dlq.queue
        exchange: fd.store.dlq.exchange
    executor:
      poolSize: 8-15
      queueCapacity: 3
  tag:
    executor:
      poolSize: 5-10
      queueCapacity: 30
  log:
    executor:
      poolSize: 5-10
      queueCapacity: 30
  auth:
    simple:
      user: admin
      pass: hackme
    stormpath:
      #apiKeyFile: '${FD_HOME}/conf/apiKey.properties'
      #application: https://api.stormpath.com/v1/applications/2vD7nBoKANqpIFSDvXxfWY
      #group:
      #  user: https://api.stormpath.com/v1/groups/6vxWqi44N3qr7gETXfLbsk
      #group:
      #  admin: https://api.stormpath.com/v1/groups/2Xro288t4Yza6CBuCoFAru

org:
  neo4j:
    # path to neo4j.properties. This setting is for development. It MUST be overriden for other environments
    path: src/main/resources
    # where to write the db files to - required
    server.database.location: ../data/fd/neo4j
    # Disable the neo4j browser by setting the port to 0
    server:
      webserver:
        port: 7474
        # Comment this line out to disable the WEBUI for Neo4j
        address: 0.0.0.0
    # enable/disable neo4j security (omitting defaults to enabled)
    auth: "true"


rabbit:
  user: guest
  pass: guest
  host: localhost



## CORS
# Leave the value blank for system defaults
cors:
  supportedHeaders:  '*'
  supportsCredentials:  true
  maxAge: 3600
  allowOrigin:  http://127.0.0.1:9000,http://localhost:9000,chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop
  allowSubdomains:  true
  #supportedMethods:  GET,POST,HEAD,PUT,DELETE
  exposedHeaders:
  tagRequests:

