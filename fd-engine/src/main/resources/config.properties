### Default configuration properties for fd-engine

## You can override these settings by placing a config.properties
## in the flockdata classpath. This file, deployed with fd-engine and fd-search
## represents the default settings if no other configuration is in use

# Where fd-search
fd-search.url=http://localhost:8081/fd-search/

# Default value for new fortresses being created.
# If storage in the fortress is false, then only current state data is stored
# i.e. no history
# You can update an existing fortress and set it's storage property to false/true to
# disable/enable KV versions
fd-store.enable=true

# Default KV implementation to use if fd-store.enable is true.
# Changing this does not affect existing data.
# Allowable values RIAK/REDIS/NONE
# NONE will store current state data in to ES only
fd-store.engine=RIAK
fd-engine.kv.async=true

# leave this enabled
fd-engine.concepts.enabled=true

# This can be set to false after the first successful startup. It creates the
# initial constraints on the Country and _Tag nodes
fd-engine.system.constraints=true

# Minimally required properties for the graph
neo4j.datastore=./data/neo4j/fd
neo4j.cacheType=hpc
neo4j.onlineBackup=true

# http://neo4j.com/docs/stable/shell-starting.html
neo4j.remoteShell=true
neo4j.remoteShellHost=127.0.0.1
neo4j.remoteShellPort=1337

# Neo4j Defaults. Uncomment these to your own config.properties in order to affect Neo4j
#neostore.nodestore.db.mapped_memory=25m
#neostore.relationshipstore.db.mapped_memory=50M
#neostore.relationshipgroupstore.db.mapped_memory=10M
#neostore.propertystore.db.mapped_memory=90M
#neostore.propertystore.db.strings.mapped_memory=130K
#neostore.propertystore.db.arrays.mapped_memory=130M
#node_cache_size=1g
#relationship_cache_size=900m
#cache.memory_ratio=50

# Keep logical logs, helps debugging but uses more disk space, enabled for
# legacy reasons To limit space needed to store historical logs use values such
# as: "7 days" or "100M size" instead of "true"
neo.keep_logical_logs=1000M size


riak.url=http://localhost:8098/riak
riak.mapurl=http://localhost:8098/mapred
riak.host=127.0.0.1

# if -Dfd.auth.provider=simple then these are the admin credentials. If using
# stormpath then they are ignored
reg.user=admin
reg.pass=hackme

# Example Stormpath configuration
# You pass FD_HOME on your commandline
fd.auth.stormpath.apiKeyFile=${FD_HOME}/conf/apiKey.properties
fd.auth.stormpath.application=https://api.stormpath.com/v1/applications/2vD7nBoKANqpIFSDvXxfWY
fd.auth.stormpath.group.user=https://api.stormpath.com/v1/groups/6vxWqi44N3qr7gETXfLbsk
fd.auth.stormpath.group.admin=https://api.stormpath.com/v1/groups/2Xro288t4Yza6CBuCoFAru

## Threadpools - these need to be tuned in line with the type of CPU you are running the service with
# fd-engine are generic processing pools. Balance this against number of users
fd-engine.poolSize=30-60
fd-engine.queueCapacity=10

# fd-log is used for async hand offs to dealing with log writing
fd-log.poolSize=50-60
fd-log.queueCapacity=30

# fd-track is used for writing incoming data
fd-track.poolSize=31-40
fd-track.queueCapacity=3

# fd-store is used for async hand offs to deal with writing to the KV Store
fd-store.poolSize=11-21
fd-store.queueCapacity=3

# This pool is used for incoming responses from fd-search
fd-search.poolSize=41-50
fd-search.queueCapacity=20

# async distribution is handled via AMQP over RabbitMQ - this is where to find the service
rabbit.host=localhost
rabbit.port=5672

## Begin Rabbit settings
# RabbitMQ configuration tuning. Balance against ack/nack rate throughput
#
rabbit.publisherCacheSize=3
rabbit.heartbeat.secs=60
rabbit.publisher.confirms=true
rabbit.publisher.returns=false

rabbit.user=guest
rabbit.pass=guest

# if false, then misconfigurations will be reported during startup
# if true then any misconfiguration will be reported after the first message is attempted
fd.amqp.lazyConnect=false

# Message queues
fd-engine.queue=fd.engine.queue
fd-engine.binding=fd.engine.binding
fd-engine.exchange=fd.engine.exchange
fd-engine.dlq.queue=fd.engine.dlq.queue
fd-engine.dlq.exchange=fd.engine.dlq.exchange
fd-engine.prefetchCount=1


fd-track.exchange=fd.track.exchange
fd-track.binding=fd.track.binding
fd-track.queue=fd.track.queue
# Make sure that this is not greater than the min fd-track.poolSize otherwise queues hang on start
# Controls the number of message consumers (AMQP setting)
fd-track.concurrentConsumers=5
fd-track.dlq.queue=fd.track.dlq.queue
fd-track.dlq.exchange=fd.track.dlq.exchange
fd-track.prefetchCount=1

fd-store.exchange=fd.store.exchange
fd-store.binding=fd.store.binding
fd-store.queue=fd.store.queue
fd-store.dlq.queue=fd.store.dlq.queue
fd-store.dlq.exchange=fd.store.dlq.exchange
fd-store.prefetchCount=1
# Controls the number of message consumers (AMQP setting)
# Make sure that this is not greater than the min fd-store.poolSize otherwise queues hang on start
fd-store.concurrentConsumers=10


fd-search.exchange=fd.search.exchange
fd-search.binding=fd.search.binding
fd-search.queue=fd.search.queue
fd-search.concurrentConsumers=10
fd-search.dlq.queue=fd.search.dlq.queue
fd-search.dlq.exchange=fd.search.dlq.exchange
fd-search.prefetchCount=10


# How long we will wait for a reply/request in milliseconds
reply.timeout=700
request.timeout=700
## End Rabbit settings

## CORS
# Each cors key must be defined. Leave the value blank for defaults
# http://software.dzhuvinov.com/cors-filter-configuration.html
cors.supportedHeaders= *
cors.supportsCredentials= true
cors.maxAge=3600
cors.allowOrigin = http://127.0.0.1:9000, http://localhost:9000,chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop
cors.allowSubdomains = true
cors.supportedMethods = GET, POST, HEAD, OPTIONS, PUT, DELETE
cors.exposedHeaders =
cors.tagRequests =

