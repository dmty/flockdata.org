version: '2'
services:
  rabbit:
      container_name: rabbit
      image: rabbitmq:3-management
      ports:
        - '5672:5672'
        - '15672:15672'
  riak:
      container_name: riak
      image: lapax/riak:latest

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:1.7.5
    command: elasticsearch -Des.cluster.name=es_flockdata
    ports:
      - '9201:9201'
      - '9301:9301'
    environment:
      ES_NODE_NAME: 'TestNode'

  kibana:
    container_name: kibana
    image: kibana:4.1.4
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
    links:
      - elasticsearch

  fd-engine:
    container_name: fd-engine
    image: flockdata/fd-engine:latest
    ports:
      - '8080:8080'
      - '7474:7474'
    links:
      - fd-search
      - rabbit
      #- fd-store
    environment:
      spring.profiles.default: production
      spring.profiles.include: fd-auth-test
      rabbit.host: rabbit
      fd-search.url: 'http://fd-search:8081/api'
      fd-store.url: 'http://fd-store:8082/api'
      org.neo4j.path: /opt/flockdata/conf
      org.neo4j.server.database.location: /opt/flockdata/data/neo4j/fd

      # Enables integration functionality
      log4j.configuration: /opt/flockdata/conf/log4j.xml

  fd-search:
    container_name: fd-search
    image: flockdata/fd-search:latest
    ports:
     - '8081:8081'
     - '9200:9200'
    environment:
      rabbit.host: rabbit
      fd-engine.url: 'http://fd-engine:8080/api'

      # Enables integration functionality
      spring.profiles.default: production
      spring.profiles.include: fd-auth-none

      es.clustername: 'es_flockdata'
      log4j.configuration: /opt/flockdata/conf/log4j.xml
    links:
     - rabbit
     - riak
     - elasticsearch

# Monitoring tools
  discovery:
    container_name: fd-discovery
    image: flockdata/fd-discovery:latest
    ports:
      - '8761:8761'
    links:
      - config

  config:
    container_name: fd-config
    image: flockdata/fd-config:latest
    ports:
      - '8888:8888'

  scope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    volumes:
      - '/var/run/:/var/run:rw'
    command:
      - '--probe.docker'
      - 'true'
    network_mode: 'host'
    pid: 'host'
    ports:
      - '4040:4040'
    privileged: true


networks:
  default:
    # Use the overlay driver for multi-host communication
    driver: bridge
