version: '2'
services:
  rabbit:
      container_name: rabbit
      image: rabbitmq:3-management

      ports:
        - '5672:5672'
        - '15672:15672'

  riak:
      container_name: riak
      image: lapax/riak:latest
      ports:
        - '8087:8087'
      environment:
        storage_backend: leveldb
        platform_data_dir: /data/riak
      volumes:
        - ./data/riak:/data/riak

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:1.7.5
    ports:
    command: elasticsearch -Des.cluster.name=es_flockdata
      - '9200:9200'
      - '9300:9300'
    #volumes:
    #  - ./data/es:/usr/share/elasticsearch/data

    environment:
      es.cluster.name: es_flockdata

  kibana:
    container_name: kibana
    image: kibana:4.1.4
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: 'http://fd-search:9201'
    depends_on:
#      - elasticsearch
      - fd-search

  fd-engine:
    container_name: fd-engine
    image: flockdata/fd-engine:latest

    ports:
      - '8080:8080'
      - '7474:7474'
      - '1337:1337'
    volumes:
      - ./data/fd/neo4j:/opt/flockdata/data

    environment:
      spring.cloud.config.discovery.enabled: 'false'
      org.fd.discovery.url: http://eureka:8761/eureka/
      eureka.instance.hostname: 192.168.99.100 # DOCKER HOST
      eureka.instance.nonSecurePort: 8080
      eureka.client.enabled: 'true'
      server.port: 8080
      spring.profiles.active: production
      spring.profiles.include: fd-auth-test

      rabbit.host: rabbit
      org.fd.search.api: http://fd-search:8081/api
      org.fd.store.api: http://fd-store:8082/api
      org.neo4j.path: /opt/flockdata
      org.neo4j.server.database.location: /opt/flockdata/data

    depends_on:
      - rabbit
      - eureka
    links:
      - fd-search
      - rabbit
      - eureka

  fd-search:
    container_name: fd-search
    image: flockdata/fd-search:latest
    ports:
     - '8081:8081'
     - '9201:9201'
     - '9301:9301'
    depends_on:
      - rabbit
      - eureka
#      - elasticsearch
    volumes:
      - ./data/fd/es:/opt/flockdata/data/

    environment:
      spring.cloud.config.discovery.enabled: 'false'
      org.fd.discovery.url: http://eureka:8761/eureka/
      eureka.instance.hostname: 192.168.99.100 # DOCKER HOST
      eureka.instance.nonSecurePort: 8081
      eureka.client.enabled: 'true'
      server.port: 8081
      rabbit.host: rabbit
      org.fd.engine.url: 'http://fd-engine:8080/api'
      riak.hosts: riak

      # Enables integration functionality
      spring.profiles.active: production
      spring.profiles.include: fd-auth-test

      es.http.port: 9201
      es.tcp.port: 9301
      es.clustername: 'es_flockdata'
      es.path.home: /opt/flockdata
      es.path.data: /opt/flockdata/data

  fd-store:
    container_name: fd-store
    image: flockdata/fd-store:latest
    ports:
     - '8082:8082'
    depends_on:
      - rabbit
      - eureka
      - riak
    environment:
      server.port: 8082
      rabbit.host: rabbit
      spring.cloud.config.discovery.enabled: 'false'
      eureka.client.enabled: 'true'
      org.fd.discovery.url: http://eureka:8761/eureka/
      eureka.instance.hostname: 192.168.99.100 # DOCKER HOST
      eureka.instance.nonSecurePort: 8082

      # Enables integration functionality
      spring.profiles.active: production
      spring.profiles.include: fd-auth-test,riak
      riak.hosts: riak
      es.clustername: 'es_flockdata'

# Monitoring tools
  eureka:
    container_name: fd-discovery
    image: flockdata/fd-discovery:latest
    ports:
      - '8761:8761'

  config:
    container_name: fd-config
    image: flockdata/fd-config:latest
    ports:
      - '8888:8888'

  scope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    volumes:
      - '/var/run/:/var/run:rw'
    command:
      - '--probe.docker'
      - 'true'
    network_mode: 'host'
    pid: 'host'
    ports:
      - '4040:4040'
    privileged: true
#MySQL
#https://dzone.com/articles/docker-compose-environment-variable-binding-exampl

networks:
  default:
    # Use the overlay driver for multi-host communication
    driver: bridge
